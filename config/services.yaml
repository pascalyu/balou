# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    default_currency: eur

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]

    App\EventSubscriber\EncodePassword:
        tags: [{ name: doctrine.event_subscriber }]

    App\EventSubscriber\CategorySubscriber:
        tags: [{ name: doctrine.event_subscriber_interface }]

    App\OpenApi\JwtDecorator:
        decorates: "api_platform.openapi.factory"
        arguments: ["@.inner"]

    # Stripe
    App\Stripe\StripeClient:
        abstract: true
        arguments: ["%env(STRIPE_SECRET_KEY)%", "%default_currency%"]

    App\Stripe\StripeManager:
        parent: App\Stripe\StripeClient
        public: true
        autowire: true
        autoconfigure: false

    # SendinBlue
    App\Sendinblue\SendinblueClient:
        abstract: true
        arguments: ["%env(SENDIN_BLUE_API_KEY)%"]

    App\Sendinblue\SendinblueManager:
        parent: App\Sendinblue\SendinblueClient
        public: true
        autowire: true
        autoconfigure: false

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
